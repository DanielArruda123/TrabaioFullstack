<h1><%= title %></h1>

<form id="tutorForm" action="">
  <input type="hidden" name="id" id="id">

  <label for="nome">Nome</label>
  <input required name="nome" id="nome" type="text"><br>

  <label for="contato">Contato</label>
  <input required name="contato" id="contato" type="text"><br>

  <label for="endereco">Endere√ßo</label>
  <input required name="endereco" id="endereco" type="text"><br>

  <label for="pets_associados">Pets Associados</label>
  <input required name="pets_associados" id="pets_associados" type="text"><br>

  <button type="submit">Enviar</button>
  <button type="reset">Cancelar</button>
</form>

<span id="error"></span>

<% if (error) { %>
  <span><%= JSON.stringify(error) %></span>
<% } %>

<table>
  <thead>
    <tr>
      <% for (let col of cols) { %>
        <th><%= col %></th>
      <% } %>
    </tr>
  </thead>
  <tbody>
    <% if (tutors && tutors.length > 0) { %>
      <% tutors.forEach(tutor => { %>
        <tr>
          <td><%= tutor.nome %></td>
          <td><%= tutor.contato %></td>
          <td><%= tutor.endereco %></td>
          <td><%= tutor.pets_associados %></td>
          <td>
            <button onclick="editTutor('<%= tutor.id %>')">Editar</button>
            <button onclick="deleteTutor('<%= tutor.id %>')">Excluir</button>
          </td>
        </tr>
      <% }) %>
    <% } else { %>
      <tr>
        <td colspan="<%= cols.length %>">Nenhum tutor encontrado.</td>
      </tr>
    <% } %>
  </tbody>
</table>

<script>
  const form = document.getElementById('tutorForm');

  form.addEventListener("submit", (e) => {
    e.preventDefault();
    const tutor = mountDataForm();

    const id = document.getElementById("id").value;
    const METHOD = id ? 'PUT' : 'POST';
    const URL = id ? `/tutors/${id}` : '/tutors';

    createOrUpdate(tutor, URL, METHOD);
  });

  function createOrUpdate(tutor, URL, METHOD) {
    fetch(URL, {
      method: METHOD,
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(tutor)
    })
    .then(async (res) => await checkERROR(res))
    .then(() => {
      form.reset();
      window.location.reload();
    })
    .catch((error) => {
      document.getElementById('error').innerText = error.message || "Erro ao salvar";
    });
  }

  function editTutor(id) {
    fetch("/tutors/" + id, { method: "GET" })
    .then(async (res) => await checkERROR(res))
    .then((tutor) => {
      for (let prop in tutor) {
        const input = document.querySelector(`input[name="${prop}"]`);
        if (input) input.value = tutor[prop];
      }
    })
    .catch((error) => {
      document.getElementById('error').innerText = error.message || error;
    });
  }

  function deleteTutor(id) {
    fetch("/tutors/" + id, { method: "DELETE" })
    .then(async (res) => await checkERROR(res))
    .then(() => {
      window.location.reload();
    })
    .catch((error) => {
      document.getElementById('error').innerText = JSON.stringify(error);
    });
  }

  async function checkERROR(res) {
    if (!res.ok) {
      let err = { message: 'Erro desconhecido' };
      try {
        err = await res.json();
      } catch (e) {}
      throw err;
    }
    return res.json();
  }

  function mountDataForm() {
    const formData = new FormData(form);
    const tutor = {};
    formData.forEach((v, k) => {
      tutor[k] = v;
    });
    return tutor;
  }
</script>

