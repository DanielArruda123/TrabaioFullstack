<h1><%= title %></h1>

<form id="solicitationForm" action="">
  <input type="hidden" name="id" id="id">

  <label for="solicitante">Solicitante</label>
  <input required name="solicitante" id="solicitante" type="text"><br>

  <label for="servico">Serviço</label>
  <input required name="servico" id="servico" type="text"><br>

  <label for="data_solicitacao">Data da Solicitação</label>
  <input required name="data_solicitacao" id="data_solicitacao" type="date"><br>

  <label for="status">Status</label>
  <input required name="status" id="status" type="text"><br>

  <label for="observacoes">Observações</label>
  <input name="observacoes" id="observacoes" type="text"><br>

  <button type="submit">Enviar</button>
  <button type="reset" onclick="clearForm()">Cancelar</button>
</form>

<span id="error" style="color: red;"></span>

<% if (error) { %>
  <span style="color: red;"><%= JSON.stringify(error) %></span>
<% } %>

<table border="1" cellpadding="5" cellspacing="0">
  <thead>
    <tr>
      <% for (let col of cols) { %>
        <th><%= col %></th>
      <% } %>
      <th>Ações</th>
    </tr>
  </thead>
  <tbody>
    <% if (solicitations && solicitations.length > 0) { %>
      <% solicitations.forEach(solicitation => { %>
        <tr>
          <td><%= solicitation.solicitante %></td>
          <td><%= solicitation.servico %></td>
          <td><%= solicitation.data_solicitacao %></td>
          <td><%= solicitation.status %></td>
          <td><%= solicitation.observacoes || '' %></td>
          <td>
            <button type="button" onclick="editSolicitation('<%= solicitation.id %>')">Editar</button>
            <button type="button" onclick="deleteSolicitation('<%= solicitation.id %>')">Excluir</button>
          </td>
        </tr>
      <% }) %>
    <% } else { %>
      <tr>
        <td colspan="<%= cols.length + 1 %>">Nenhuma solicitação encontrada.</td>
      </tr>
    <% } %>
  </tbody>
</table>

<script>
  const form = document.getElementById('solicitationForm');

  form.addEventListener("submit", (e) => {
    e.preventDefault();
    const solicitation = mountDataForm();

    const id = document.getElementById("id").value;
    const METHOD = id ? 'PUT' : 'POST';
    const URL = id ? `/solicitations/${id}` : '/solicitations';

    createOrUpdate(solicitation, URL, METHOD);
  });

  function createOrUpdate(solicitation, URL, METHOD) {
    fetch(URL, {
      method: METHOD,
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(solicitation)
    })
    .then(async res => {
      if (!res.ok) {
        const errorData = await res.json().catch(() => ({}));
        throw new Error(errorData.message || 'Erro desconhecido');
      }
      return res.json();
    })
    .then(() => {
      form.reset();
      clearForm();
      document.getElementById('error').innerText = '';
      window.location.reload();
    })
    .catch((error) => {
      console.error("Erro ao salvar:", error);
      document.getElementById('error').innerText = error.message || "Erro ao salvar";
    });
  }

  function editSolicitation(id) {
    fetch("/solicitations/" + id)
      .then(async res => {
        if (!res.ok) {
          const errorData = await res.json().catch(() => ({}));
          throw new Error(errorData.message || 'Erro desconhecido');
        }
        return res.json();
      })
      .then((solicitation) => {
        for (let prop in solicitation) {
          const input = document.querySelector(`input[name="${prop}"]`);
          if (input) input.value = solicitation[prop];
        }
      })
      .catch((error) => {
        console.error("Erro ao buscar solicitação:", error);
        document.getElementById('error').innerText = error.message || "Erro ao buscar solicitação";
      });
  }

  function deleteSolicitation(id) {
    if (!confirm("Tem certeza que deseja excluir esta solicitação?")) return;

    fetch("/solicitations/" + id, { method: "DELETE" })
      .then(async res => {
        if (!res.ok) {
          const errorData = await res.json().catch(() => ({}));
          throw new Error(errorData.message || 'Erro desconhecido');
        }
        return res.json();
      })
      .then(() => {
        window.location.reload();
      })
      .catch((error) => {
        console.error("Erro ao excluir solicitação:", error);
        document.getElementById('error').innerText = error.message || "Erro ao excluir solicitação";
      });
  }

  function mountDataForm() {
    const formData = new FormData(form);
    const solicitation = {};
    formData.forEach((v, k) => {
      solicitation[k] = v;
    });
    return solicitation;
  }

  function clearForm() {
    form.reset();
    document.getElementById("id").value = '';
    document.getElementById('error').innerText = '';
  }
</script>
